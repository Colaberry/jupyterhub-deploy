#!/bin/bash -e
# Usage: lsi-cards {machine-name} {mount-point}
#
# Example:
#     ./lsi-cards host001 /data
#
#
# Copyright (c) 2015, Kyle Kelley
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of bigcards nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

MACHINE_ID=${1}
[ -z "$MACHINE_ID" ] && echo "error; machine ID should be passed in" && exit 1

MOUNT_POINT=${2}
[ -z "$MOUNT_POINT" ] && echo "error; mount point should be passed as the second argument" && exit 1

GFILE="/etc/${MACHINE_ID}.raid-setup"
if [ -e "${GFILE}" ]
then
  echo "${GFILE} exists, raid already setup?"
exit 1
fi

CARDS=`lsblk -i -o KNAME,MODEL | grep NWD-BLP4-1600 | awk '{print $1}'`

for blockdev in $CARDS
do
  echo "Applying SSD settings to ${blockdev}"
  echo noop | tee /sys/block/${blockdev}/queue/scheduler
  echo 4096 | tee /sys/block/${blockdev}/queue/nr_requests
  echo 1024 | tee /sys/block/${blockdev}/queue/max_sectors_kb
  echo 1 | tee /sys/block/${blockdev}/queue/nomerges
  echo 512 | tee /sys/block/${blockdev}/device/queue_depth
done

if [ -b "/dev/md0" ]
then
  mdadm --stop /dev/md0
fi

BLOCKS=""
for blockdev in $CARDS
do
  BLOCKS="${BLOCKS} /dev/${blockdev}"
done

yes | mdadm --create --verbose -f /dev/md0 --level=stripe --raid-devices=2 ${BLOCKS}

mkfs.ext4 /dev/md0

mkdir $MOUNT_POINT
echo "UUID=`blkid -s UUID -o value /dev/md0`  $MOUNT_POINT ext4  noatime 0  0" >> /etc/fstab
mount $MOUNT_POINT

touch "${GFILE}"
