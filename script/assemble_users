#!/usr/bin/env python

"""Gets the list of users from the hub server, based on what home directories
there are, and saves them to users.vault.yml. The instructors should always be
specified manually; anyone who is not an instructor will be listed as a student.

"""

import yaml
import pandas as pd
import os
import sys
import subprocess as sp
from collections import OrderedDict

################################################################################

# This is the root directory of the ansible config
root = os.path.abspath(os.path.join('..', os.path.dirname(__file__)))

# This is the filename where the users are stored
users_file = os.path.join(root, 'users.vault.yml')

# This is the filename where the vault password is stored
vault_password_file = os.path.join(root, 'vault-password')

# This is the SSH hostname of the hub server that we want to get the users from
hostname = "compmodels"

################################################################################

# decrypt the users
sp.call([
    "ansible-vault", "decrypt", users_file,
    "--vault-password-file", vault_password_file
])

# read in the instructors
with open(users_file, "r") as fh:
    instructors = yaml.load(fh.read())["instructors"]

# get the students from the server
students = sp.check_output(["ssh", hostname, "ls", "/home"])
students = sorted(set(students.strip().split("\n")) - set(instructors))

# write out the new file
users = dict(instructors=instructors, students=students)
with open(users_file, "w") as fh:
    fh.write("---\n")
    fh.write(yaml.dump(users, default_flow_style=False))

# encrypt the users
sp.call([
    "ansible-vault", "encrypt", users_file,
    "--vault-password-file", vault_password_file
])
